#!/bin/bash
function hostify()
{
    local RC=$1
    if [[ -e ~/.bash.d/$RC.$(hostname) ]]; then
        source ~/.bash.d/$RC.$(hostname)
    fi
    if [[ ! -z "$CC_VIEW_SPEC" || ! -z "$CLEARCASE_ROOT" ]]; then
        if [[ -e ~/.bash.d/$RC.clearcase ]]; then
            source ~/.bash.d/$RC.clearcase
        fi
    fi
}

function add_to_path
{
    if [[ "$SHELL" == "/bin/bash" ]]; then
        if [[ "${!1}" =~ "(^|:)"${2}"(:|$)" ]]
        then
            return 0
        fi
        export $1="$2:${!1}"
    elif [[ "$SHELL" == "/bin/zsh" ]]; then
        export -U $1=$2:${(P)1}
    fi
}

#function ps1() 
#{ 
    #GREEN='\[\033[0;32;1m\]'
    #BLUE='\[\033[0;36;1m\]'
    #
    #PS1="\[\e[7m\]\[\e[0m\]${GREEN}\[\e[1m\]\W\[\e[0m\] \!\$\[\e[0m\] "
#}

function fgrep()
{
    case $# in 
        1)
            DIR=.
            EXPR=$1
            ;;
        2)
            DIR=$1
            EXPR=$2
            ;;
        *)
            echo "Usage: $0 [directory] <expression>"
            return 1;
            ;;
    esac

    find ${DIR} -type d -path obj -prune -o -type f -name \*[cph]   | xargs egrep "$EXPR"
}

function figrep()
{
    case $# in 
        1)
            DIR=.
            EXPR=$1
            ;;
        2)
            DIR=$1
            EXPR=$2
            ;;
        *)
            echo "Usage: $0 [directory] <expression>"
            return 1;
            ;;
    esac

    find ${DIR} -type d -path obj -prune -o -type f -name \*[cph]   | xargs egrep -i "$EXPR"
}

#function title()
#{
    #echo -ne "\033]2;$*\007"
#}

#function settitle()
#{
#    if [[ -z "$CC_VIEW_SPEC" ]]; then
#        title "$HOSTNAME :: $PWD"
#    else
#        title "$(cleartool pwv -s) :: $HOSTNAME :: $PWD :: "
#    fi
#}
#export PROMPT_COMMAND=settitle

sv () {
    views=$(subst | dos2unix | sed -e 's/:.*\\/ /g')

    if [[ -z "$1" ]]
    then
        echo "$views"
    else
        view=$(echo "$views" | egrep -i "\<$1\>" | cut -f1 -d" " | tr a-z A-Z)
        if [[ -z "$view" ]]
        then
            echo "ERROR: view $1 does not exist"
            echo $views
        elif [[ "$view" == "$CC_VIEW_SPEC" ]]
        then
            echo "Already in view $view"
        elif [[ -n $CC_VIEW_SPEC ]]
        then
            echo "ERROR: A view is currently set -- run unsetview and try again"
        else
            CC_VIEW_SPEC=$view $SHELL --login -i
        fi
    fi
}

hostify bash_funcs
