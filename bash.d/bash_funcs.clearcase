#!/bin/bash
function lsv
{
    while [ $# -gt 0 ];
    do
        DIR=`dirname $1`
        FILE=`basename $1`

        (cd $DIR; cleartool lsvtree -g $FILE)&
        shift
    done
}

function lsco 
{
    eval cleartool lsco -cvi -all -s $CYGFIXIFY
}
function lspriv
{
    eval cleartool lspriv $CYGFIXIFY
}

function lsrm
{
    eval cleartool lspriv $CYGFIXIFY | egrep -v '(GPATH|GTAGS|GRTAGS|\.projectile|[a-z]*\.t|checkedout)'
}

function lscoa
{
    eval cleartool lsco -cvi -avobs -s $CYGFIXIFY
}

function lscor
{
    eval cleartool lsco -cvi -rec -s $CYGFIXIFY
}

function co
{
    eval cleartool co -nc -unres $*
}

function ci
{
    eval cleartool ci -nc $*
}

function unco
{
    eval cleartool unco -rm $*
}

function vagrun
{
    eval ${VCCAP_DIR}/bin/vagrun $*
}

function catcs
{
    eval cleartool catcs $*
}

function cdiff
{
    while [ $# -gt 0 ];
    do
        if [[ -e $1 ]]; then
            cleartool diff -pred -diff -options -b $*
        fi
        shift
    done
}
function gdiff
{
    while [ $# -gt 0 ];
    do
        if [[ -e $1 ]]; then
            cleartool diff -pred -graphical -options -b $1&
        fi
        shift
        shift
    done
}

function vcdiff
{
    set -o noglob
    while [ $# -gt 0 ];
    do
        if [[ -e $1 ]]; then
            LS=$(cleartool ls -l $1 | sed -e 's/\\/\//g')
            if [[ $? -eq 0 ]]; 
            then
                if [[ ${LS} =~ version\ *(.*)@@.*/CHECKEDOUT\ from\ (.*)\ *Rule.*CHECKEDOUT ]]; 
                then
                    FILE=${BASH_REMATCH[1]}
                    ORIG=${BASH_REMATCH[2]}
                    DEST=/tmp/$(basename ${FILE}).orig.$$
                    #echo FILE=${FILE}
                    #echo ORIG=${ORIG}
                    #echo DEST=${DEST}
                    cp ${FILE}@@${ORIG} ${DEST}
                    chmod 644 ${DEST}
                    vimdiff ${FILE} ${DEST}
                    rm -f ${DEST}
                fi
            fi
        fi
        shift
    done
    #version                /rxd/rmd/e6000/hdwr/dprocs/slowpath/src\swfp.c@@\main\vcore_main\CHECKEDOUT from \main\vcore_main\11   Rule: element * CHECKEDOUT
    set -o glob
}

function brdiff
{
    set -o noglob
    while [ $# -gt 0 ];
    do
        if [[ -f $1 ]]; then
            LS=$(cleartool ls -l $1 | sed -e 's/\\/\//g')
            if [[ $? -eq 0 ]]; 
            then
                FILE=""
                BRANCH=""
                if [[ ${LS} =~ version\ *(.*)@@(.*)/CHECKEDOUT\ from\ (.*)\ *Rule.*CHECKEDOUT ]]; 
                then
                    FILE=${BASH_REMATCH[1]}
                    BRANCH=${BASH_REMATCH[2]}
                elif [[ ${LS} =~ version\ *(.*)@@(.*)/[0-9]+\ *Rule:.* ]]; 
                then
                    FILE=${BASH_REMATCH[1]}
                    BRANCH=${BASH_REMATCH[2]}
                fi
                DEST="/tmp/$(basename ${FILE}).orig.$$"

                #echo FILE=${FILE}
                #echo BRANCH=${BRANCH}
                #echo DEST=${DEST}
                cp ${FILE}@@${BRANCH}/0 ${DEST}
                chmod 644 ${DEST}
                vimdiff ${FILE} ${DEST}
                rm -f ${DEST}
            fi
        fi
        shift
    done
    #version                /rxd/rmd/e6000/hdwr/dprocs/common/h\vmac-bpi.h@@\main\hjw_vcore_dynsched_1\2           Rule: element * ...\hjw_vcore_dynsched_1\LATEST
    set +o noglob
}

function tdiff
{
    difft --width 160 $1@@$(cleartool describe -predecessor -short $1 | sed -e 's/\\/\//g') $1
}

function ppcmakeall
{
    (cd /system/app && ppcmake $*;)
    (cd /system/kernel && ppcmake $*;)
    (cd /system/image && ppcmake $*;)
}

function x86makeall
{
    (cd /system/app && x86make $*;)
    (cd /system/kernel && x86make $*;)
    (cd /system/image && x86make $*;)
}

# setsnap [drive | viewname]
#    prints available views if no args given
function setsnap() {
views=$(subst | dos2unix | sed -e 's/:.*\\/ /g');
if [[ -z "$1" ]]; then
    echo "$views";
else
    view=$(echo "$views" | egrep -i "\<$1\>" | cut -f1 -d" " | tr a-z A-Z);
    tag=$(echo "$views" | egrep -i "\<$1\>" | cut -f2 -d" ");
    if [[ -z "$view" ]]; then
        echo "ERROR: view $1 does not exist";
        echo $views;
    else
        if [[ "$view" == "$CC_VIEW_SPEC" ]]; then
            echo "Already in view $view";
        else
            if [[ -n $CC_VIEW_SPEC ]]; then
                echo "ERROR: A view is currently set -- run unsetview and try again";
            else
                # use egrep with perl style regex with -P
                local baseVer=`cleartool catcs -tag $tag | egrep -i "^element.*CER_V.*\.[0-9][0-9]00" | sed -e s/\\\t/\ /g | cut -f3 -d" "`
                if [[ $baseVer =~ CER_V0(1\.|2\.|3\.0[0-5]) ]]; then
                    echo "Version $baseVer has issues with /tmp and ---- permissions (eg 'zero permissions')"
                    local fstabEntry=`cat /etc/fstab | egrep -i "^none.*noacl"`
                    if [[ ! $fstabEntry =~ noacl,posix\=0 ]]; then
                        echo ""
                        echo "ERROR!"
                        echo " ensure /etc/fstab has -noacl for: 'none / cygdrive binary,noacl,posix=0,user 0 0'"
                        echo " see https://cygwin.com/ml/cygwin/2010-07/msg00323.html"
                        echo "ERROR!"
                        echo "  -- VIEW NOT SET !!! --"
                        return
                    fi
                    local winTmpDir=`cygpath -am "c:/Users/$USERNAME/AppData/Local/Temp"`
                    echo "Changing env vars TMP,TEMP,TEMPDIR to $winTmpDir"
                    export TMP=$winTmpDir
                    export TMPDIR=$winTmpDir
                    export TEMP=$winTmpDir
                fi
                CC_VIEW_SPEC=$view $SHELL --login -i;
            fi;
        fi;
    fi;
fi
}

function cmeld() {
    filename=$1
    if [[ ! -e $file  ]]; then
        >&2 echo "Usage: $0 <filename>"
    else
        from=$(cleartool ls -l $filename | awk '{print $4}')
        meld $filename $filename@@$from
    fi
}

function rpdup() {
    echo configure ssd-start file tftpboot/hjw/$(cleartool pwv -s).rpd.img transport http server 10.173.4.3 vrf debug-mgmt
    scp /rxd/prod/rpd/image/$(cleartool pwv -s).rpd.img lab@tazerface.irlcor.lab:/tftpboot/hjw/
}
function rmdup() {
    if [[ -e /rxd/prod/rmd/image/$(cleartool pwv -s).img ]]; then
        echo configure ssd-start file tftpboot/hjw/$(cleartool pwv -s).img transport http server 10.173.4.3 vrf debug-mgmt
        scp /rxd/prod/rmd/image/$(cleartool pwv -s).img lab@tazerface.irlcor.lab:/tftpboot/hjw/$1
    elif [[ -e /rxd/prod/rmd/image/$(cleartool pwv -s).rd3.rmd.img ]]; then 
        echo configure ssd-start file tftpboot/hjw/$(cleartool pwv -s).rd3.rmd.img transport http server 10.173.4.3 vrf debug-mgmt
        scp /rxd/prod/rmd/image/$(cleartool pwv -s).rd3.rmd.img lab@tazerface.irlcor.lab:/tftpboot/hjw/$1
    else
        echo No image
    fi
}

function rmdall() {
 for dir in hjw rd1322 rd2322 cotuama ttunnell
 do
     for file in $(ssh lab@tazerface.irlcor.lab ls /tftpboot/$dir)
     do
         echo configure ssd-start file tftpboot/$dir/$file transport http server 10.173.4.3 vrf debug-mgmt
     done
 done
}

function rpdchi() {
    echo configure ssd-start file hjw/$(cleartool pwv -s).rpd.img transport tftp server 10.44.230.170
    curl --user serial:serial -T /rxd/prod/rpd/image/$CC_VIEW_TAG.rpd.img ftp://10.44.230.170//tftpboot/$USER/$CC_VIEW_TAG.rpd.img
}
function rmdchi() {
    echo configure ssd-start file hjw/$(cleartool pwv -s).img transport tftp server 10.44.230.170 vrf debug-mgmt
    curl --user serial:serial -T /rxd/prod/rmd/image/$CC_VIEW_TAG.img ftp://10.44.230.170//tftpboot/$USER/$CC_VIEW_TAG.img
}

function edcs() {
    cleartool catcs  > edcs.$$
    vim edcs.$$
    if [[ $? -eq 0 ]]; then
        echo -n "Do you wish to set the config spec: "
        read input
        if [[ ${input} == "yes" || ${input} == "y" ]]; then
            cleartool setcs edcs.$$
        fi
    fi
    rm edcs.$$
}

function _do_vcore_up() {
    USERNAME=$(echo ${USER} |  tr '[:upper:]' '[:lower:]' )
    user=$1
    host=$2
    view=$(cleartool pwv -s)
    rsync -aP /rxd/prod/rmd/bin/ ${user}@${host}:/home/${user}/${USERNAME}/${view}/images/
}

function wslup() {
    _do_vcore_up hjw 172.17.159.63
}

function cs1v1up() {
    _do_vcore_up labuser corks1-vcore1.irlcor.lab
}

function cs2v1up() {
    _do_vcore_up labuser corks2-vcore1.irlcor.lab
}

function cs2v2up() {
    _do_vcore_up labuser corks2-vcore2.irlcor.lab
}

function cs4v1up() {
    _do_vcore_up labuser corks4-vcore1.irlcor.lab
}

function vcoreup() {
    echo cs1v1
    cs1v1up
    echo cs2v1
    cs2v1up
    echo cs2v2
    cs2v2up
    echo cs4v1
    cs4v1up
}
